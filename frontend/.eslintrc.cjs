module.exports = {
    env: {
        es2022: true,
        node: true,
        jest: true,
        browser: true,
    },
    extends: ['eslint:recommended', 'react-app'],
    overrides: [],
    parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
    },
    rules: {
        indent: ['error', 4],
        'linebreak-style': ['error', 'windows'],
        quotes: ['error', 'single'],
        semi: ['error', 'always'],
        'no-await-in-loop': 'error',
        'no-duplicate-imports': 'error',
        'no-return-await': 'warn',
        'no-unneeded-ternary': ['error', { defaultAssignment: false }],
        'no-var': 'error',
        'array-bracket-newline': ['error', { multiline: true }],
        'array-bracket-spacing': ['error', 'never'],
        'array-element-newline': ['error', 'consistent'],
        'arrow-spacing': ['error', { before: true, after: true }],
        'block-spacing': ['error', 'always'],
        'brace-style': ['error', '1tbs'],
        'comma-dangle': [
            'error',
            {
                arrays: 'always-multiline',
                objects: 'always-multiline',
                imports: 'always-multiline',
                exports: 'always-multiline',
                functions: 'never',
            },
        ],
        'comma-spacing': ['error', { before: false, after: true }],
        'comma-style': ['error', 'last'],
        'computed-property-spacing': [
            'error',
            'never',
            { enforceForClassMembers: true },
        ],
        'dot-location': ['error', 'object'],
        'func-call-spacing': ['error', 'never'],
        'function-paren-newline': ['error', 'multiline-arguments'],
        'key-spacing': [
            'error',
            {
                beforeColon: false,
                afterColon: true,
                mode: 'strict',
            },
        ],
        'keyword-spacing': ['error', { before: true, after: true }],
        'lines-around-comment': [
            'error',
            {
                beforeBlockComment: true,
                allowClassStart: true,
                allowObjectStart: true,
                allowBlockStart: true,
            },
        ],
        'lines-between-class-members': [
            'error',
            'always',
            { exceptAfterSingleLine: true },
        ],
        'max-len': [
            'warn',
            {
                code: 120,
                tabWidth: 4,
                ignoreUrls: true,
                ignoreStrings: true,
                ignoreTemplateLiterals: true,
                ignoreRegExpLiterals: true,
            },
        ],
        'max-statements-per-line': ['error', { max: 1 }],
        'multiline-ternary': ['error', 'always-multiline'],
        'new-parens': ['error', 'always'],
        'newline-per-chained-call': ['error', { ignoreChainWithDepth: 2 }],
        'no-extra-parens': [
            'error',
            'all',
            {
                enforceForNewInMemberExpressions: false,
                enforceForFunctionPrototypeMethods: false,
            },
        ],
        'no-multi-spaces': ['error', { ignoreEOLComments: true }],
        'no-multiple-empty-lines': [
            'warn',
            {
                max: 4,
                maxEOF: 1,
                maxBOF: 0,
            },
        ],
        'no-trailing-spaces': 'error',
        'no-whitespace-before-property': 'error',
        curly: ['error', 'all'],
        'object-curly-newline': [
            'error',
            { multiline: true, consistent: true, minProperties: 4 },
        ],
        'object-curly-spacing': [
            'error',
            'always',
            { arraysInObjects: false, objectsInObjects: false },
        ],
        'object-property-newline': [
            'error',
            { allowAllPropertiesOnSameLine: true },
        ],
        'operator-linebreak': ['error', 'after'],
        'rest-spread-spacing': ['error', 'never'],
        'semi-spacing': ['error', { before: false, after: true }],
        'semi-style': ['error', 'last'],
        'space-before-blocks': ['error', 'always'],
        'space-before-function-paren': [
            'error',
            {
                anonymous: 'always',
                named: 'never',
                asyncArrow: 'always',
            },
        ],
        'space-in-parens': ['error', 'never'],
        'space-infix-ops': 'error',
        'space-unary-ops': ['error', { words: true, nonwords: false }],
        'switch-colon-spacing': ['error', { before: false, after: true }],
        'wrap-iife': ['error', 'inside'],
    },
};
